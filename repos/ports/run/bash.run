create_boot_directory

import_from_depot [depot_user]/src/[base_src] \
                  [depot_user]/pkg/[drivers_interactive_pkg] \
                  [depot_user]/pkg/terminal \
                  [depot_user]/src/init \
                  [depot_user]/src/posix \
                  [depot_user]/src/ncurses \
                  [depot_user]/src/vim \
                  [depot_user]/src/bash \
                  [depot_user]/src/coreutils \
                  [depot_user]/src/vfs \
                  [depot_user]/src/vfs_pipe \
                  [depot_user]/src/nitpicker \
                  [depot_user]/src/gui_fb \
                  [depot_user]/src/fs_rom

# write default vimrc file
set vimrc_fd [open [run_dir]/genode/vimrc w]
puts $vimrc_fd {
set noloadplugins
set hls
set nocompatible
set laststatus=2
set noswapfile
set viminfo=
set backspace=indent,eol,start
set nowrap
set ruler
set ts=2
set wildmode=list:longest
set completeopt=menu,longest}
close $vimrc_fd


proc artificial_inline_files { } {
	set result ""
	for {set i 0} { $i < 30 } { incr i } {
		append result "<inline name=\"a$i\"/>\n"
	}
	return $result
}


install_config {
<config verbose="yes">
	<parent-provides>
		<service name="ROM"/>
		<service name="LOG"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="PD"/>
		<service name="IRQ"/>
		<service name="IO_PORT"/>
		<service name="IO_MEM"/>
		<service name="TRACE"/>
	</parent-provides>

	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>

	<default caps="100"/>

	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>

	<start name="drivers" caps="1500" managing_system="yes">
		<resource name="RAM" quantum="64M"/>
		<binary name="init"/>
		<route>
			<service name="ROM" label="config"> <parent label="drivers.config"/> </service>
			<service name="Timer">   <child name="timer"/> </service>
			<service name="Capture"> <child name="nitpicker"/> </service>
			<service name="Event">   <child name="nitpicker"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="nitpicker">
		<resource name="RAM" quantum="4M"/>
		<provides>
			<service name="Gui"/> <service name="Capture"/> <service name="Event"/>
		</provides>
		<config focus="rom">
			<capture/> <event/>
			<domain name="default" layer="2" content="client" label="no" hover="always"/>
			<default-policy domain="default"/>
		</config>
		<route>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="gui_fb">
		<resource name="RAM" quantum="4M"/>
		<provides> <service name="Framebuffer"/> <service name="Input"/> </provides>
		<config/>
		<route>
			<service name="Gui"> <child name="nitpicker"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="terminal" caps="110">
		<resource name="RAM" quantum="2M"/>
		<provides><service name="Terminal"/></provides>
		<route>
			<service name="ROM" label="config"> <parent label="terminal.config"/> </service>
			<service name="Input">       <child name="gui_fb"/> </service>
			<service name="Framebuffer"> <child name="gui_fb"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="rw_vfs" caps="120">
		<resource name="RAM" quantum="30M"/>
		<binary name="vfs"/>
		<provides><service name="File_system"/></provides>
		<config>
			<vfs>
				<dir name="subdir">
					<tar name="bash.tar" />
				</dir>
				<dir name="s"/>
				<dir name="s2"/>
				<dir name="t"/>
				<inline name="f1"/>} [artificial_inline_files] {
			</vfs>

			<default-policy root="/" writeable="yes"/>
		</config>
	</start>

	<start name="vfs" caps="120">
		<resource name="RAM" quantum="30M"/>
		<provides><service name="File_system"/></provides>
		<config>
			<vfs>
				<tar name="coreutils.tar" />
				<tar name="vim.tar" />
				<tar name="bash.tar" />

				<dir name="home"> <ram/> </dir>
				<dir name="share"> <dir name="vim"> <rom name="vimrc"/> </dir> </dir>
				<dir name="tmp"> <ram/> </dir>
				<dir name="dev">
					<zero/> <null/> <terminal/>
					<inline name="rtc">2018-01-01 00:01</inline>
				</dir>
				<dir name="rw"> <fs label="rw"/> </dir>
				<dir name="pipe"> <pipe/> </dir>
			</vfs>

			<policy label_prefix="vfs_rom" root="/"/>
			<default-policy root="/" writeable="yes"/>
		</config>
		<route>
			<service name="File_system"> <child name="rw_vfs"/> </service>
			<service name="Terminal"> <child name="terminal"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="vfs_rom">
		<resource name="RAM" quantum="30M"/>
		<binary name="fs_rom"/>
		<provides> <service name="ROM"/> </provides>
		<config/>
		<route>
			<service name="File_system"> <child name="vfs"/> </service>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="/bin/vim" caps="1000">
		<resource name="RAM" quantum="30M" />
		<config ld_verbose="yes">
			<libc stdin="/dev/terminal" stdout="/dev/terminal"
			      stderr="/dev/terminal" rtc="/dev/rtc" pipe="/pipe"/>
			<vfs> <fs buffer_size="8K"/> </vfs>
			<arg value="vim"/>
			<env key="TERM" value="screen"/>
			<env key="PATH" value="/bin" />
		</config>
		<route>
			<service name="File_system"> <child name="vfs"/> </service>
			<service name="ROM" label_suffix=".lib.so"> <parent/> </service>
			<service name="ROM" label_last="/bin/vim"> <child name="vfs_rom"/> </service>
			<service name="ROM" label_prefix="/bin"> <child name="vfs_rom"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
	</start>

	<start name="trace_logger" >
		<resource name="RAM" quantum="180M"/>
		<config verbose="no"
				session_ram="10M"
				session_parent_levels="1"
				session_arg_buffer="64K"
				period_sec="5"
				activity="no"
				affinity="no"
				default_policy="null"
				default_buffer="1K">

<!--
			<policy label_prefix="init -> /bin/vim"
			        buffer="4M"
			        policy="null"/>
			<policy label="init -> vfs"
			        buffer="4M"
			        policy="null"/>
			<policy label="init -> rw_vfs"
			        buffer="4M"
			        policy="null"/> -->
		</config>
	</start>
</config>}

set fd [open [run_dir]/genode/focus w]
puts $fd "<focus label=\"gui_fb -> \" domain=\"default\"/>"
close $fd

build { server/vfs lib/trace app/trace_logger lib/ld test/fork test/execve }

build_boot_image { vfs null log_output trace_logger ld.lib.so libc.lib.so libm.lib.so vfs.lib.so posix.lib.so }

run_genode_until forever

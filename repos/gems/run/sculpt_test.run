set use_nvme 0

source ${genode_dir}/repos/gems/run/sculpt.run

# enable Qemu networking, usable via the nic_drv
append_qemu_nic_args
append qemu_args " -m 768 "

# attach small SATA disk to Qemu to experiment with file-system access
set disk_image "bin/sculpt-ahci.raw"
if {![file exists bin/sculpt-ahci.raw]} {
	puts stderr "creating toy disk image $disk_image for use in Qemu"
	catch { exec dd if=/dev/zero of=$disk_image bs=1M count=512 }
}
append qemu_args " -device ahci,id=ahci "
append qemu_args " -drive id=hdd,file=$disk_image,format=raw,if=none -device ide-hd,drive=hdd,bus=ahci.1 "

# attach small NVMe disk to Qemu to experiment with file-system access
if {$use_nvme} {
	set disk_image "bin/sculpt-nvme.raw"
	if {![file exists bin/sculpt-nvme.raw]} {
		puts stderr "creating toy disk image $disk_image for use in Qemu"
		catch { exec dd if=/dev/zero of=$disk_image bs=1M count=512 }
	}
	append qemu_args " -drive id=nvme0,file=$disk_image,format=raw,if=none "
	append qemu_args " -device nvme,drive=nvme0,serial=NVMe_666,id=nvme0n1 "
}

run_genode_until ".*Hypervisor reports.*\n" 1000

set start_time [clock milliseconds]

puts stderr "--- start time: $start_time ---"

run_genode_until ".*child \"depot\" announces service \"File_system\".*\n" 1000 [output_spawn_id]

set end_time [clock milliseconds]

puts stderr "--- end time: $end_time ---"

set boot_duration_ms [expr ($end_time - $start_time)]

puts "\nboot time: $boot_duration_ms ms\n"
